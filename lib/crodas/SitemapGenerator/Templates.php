<?php
/**
 *  This file was generated with crodas/SimpleView (https://github.com/crodas/SimpleView)
 *  Do not edit this file.
 *
 */

namespace {

    class base_template_9d02f33275d0740badce8f3a45bad6a998b9de47
    {
        protected $parent;
        protected $child;
        protected $context;

        public function yield_parent($name, $args)
        {
            $method = "section_" . sha1($name);

            if (is_callable(array($this->parent, $method))) {
                $this->parent->$method(array_merge($this->context, $args));
                return true;
            }

            if ($this->parent) {
                return $this->parent->yield_parent($name, $args);
            }

            return false;
        }

        public function do_yield($name, Array $args = array())
        {
            if ($this->child) {
                // We have a children template, we are their base
                // so let's see if they have implemented by any change
                // this section
                if ($this->child->do_yield($name, $args)) {
                    // yes!
                    return true;
                }
            }

            // Do I have this section defined?
            $method = "section_" . sha1($name);
            if (is_callable(array($this, $method))) {
                // Yes!
                $this->$method(array_merge($this->context, $args));
                return true;
            }

            // No :-(
            return false;
        }

    }

    /** 
     *  Template class generated from Sitemap.tpl
     */
    class class_a265eefb1e0bb996c601f27976194d3d702e3fc7 extends base_template_9d02f33275d0740badce8f3a45bad6a998b9de47
    {

        public function render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }
            echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">\n";
            foreach($urls as $url) {
                echo "    <url>\n        <loc>" . ($url->url) . "</loc>\n";
                if ($url->lastmod) {
                    echo "            <lastmod>" . ($url->lastmod) . "</lastmod>\n";
                }
                if ($url->changefreq) {
                    echo "            <changefreq>" . ($url->changefreq) . "</changefreq>\n";
                }
                echo "        <priority>0.8</priority>\n    </url>\n";
            }
            echo "</urlset>\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Index.tpl
     */
    class class_b0a8aacb399c1b305f253f1ce76fb5011b67fe19 extends base_template_9d02f33275d0740badce8f3a45bad6a998b9de47
    {

        public function render(Array $vars = array(), $return = false)
        {
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }
            echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<sitemapindex xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n";
            foreach($pages as $page) {
                echo "    <sitemap>\n        <loc>" . ($page) . "</loc>\n        <lastmod>" . (date('c')) . "</lastmod>\n    </sitemap>\n";
            }
            echo "</sitemapindex>\n";

            if ($return) {
                return ob_get_clean();
            }

        }
    }

}

namespace crodas\SitemapGenerator {

    class Templates
    {
        public static function getAll()
        {
            return array (
                0 => 'sitemap',
                1 => 'index',
            );
        }

        public static function exec($name, Array $context = array(), Array $global = array())
        {
            $tpl = self::get($name);
            return $tpl->render(array_merge($global, $context));
        }

        public static function get($name, Array $context = array())
        {
            static $classes = array (
                'sitemap.tpl' => 'class_a265eefb1e0bb996c601f27976194d3d702e3fc7',
                'sitemap' => 'class_a265eefb1e0bb996c601f27976194d3d702e3fc7',
                'index.tpl' => 'class_b0a8aacb399c1b305f253f1ce76fb5011b67fe19',
                'index' => 'class_b0a8aacb399c1b305f253f1ce76fb5011b67fe19',
            );
            $name = strtolower($name);
            if (empty($classes[$name])) {
                throw new \RuntimeException("Cannot find template $name");
            }

            $class = "\\" . $classes[$name];
            return new $class;
        }
    }

}
